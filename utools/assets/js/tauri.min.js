function add_select_efi_drives(e){const i=e.split("\n");for(let e=0;e<i.length;e++){const o=i[e].split(/\s{2,}/);var t;5===o.length&&0===o[2].indexOf("EFI")&&(t={text:o[2].slice(o[2].indexOf("EFI")+4)+" "+o[4],value:o[4],partitionname:o[2].slice(o[2].indexOf("EFI")+4),ismounted:!1},VUEAPP.select_efi_drives.options.push(t),check_disk_ismounted(t),0===VUEAPP.select_efi_drives.selected.length&&(VUEAPP.select_efi_drives.selected=o[4]))}}async function check_disk_ismounted(i){const e=window.__TAURI__.shell["Command"];if(0<(await e.create("run-check-diskmouted",["-c","mount |grep "+i.value]).execute()).stdout.length){const t=VUEAPP.select_efi_drives.options.find(e=>e.value===i.value);t.ismounted=!0}}async function getEFIdiskName_MT(){const e=window.__TAURI__.shell["Command"];add_select_efi_drives((await e.create("run-diskutil-list",["list"]).execute()).stdout)}async function mountEFIDisk_MT(){const i=VUEAPP.select_efi_drives.selected;if(""===i)toastr.error(VUEAPP.lang.tip_no_mount_disk);else{const e=VUEAPP.select_efi_drives.options.find(e=>e.value===i);if(e.ismounted)toastr.error(VUEAPP.lang.tip_mount_disk_ismounted);else{const t=window.__TAURI__.core["invoke"];await t("mount_efi_disk",{diskname:"/dev/"+i});e.ismounted=!0}}}async function checkPlistfile(e){const i=window.__TAURI__.shell["Command"];let t=await i.create("run-check-plist-file",["-c","plutil -lint "+escapeFileName(e)]).execute();return"string"==typeof t?.stdout&&("OK"!==t.stdout.replace(/\n/g,"").slice(-2)&&(showTipModal(VUEAPP.lang.tip_file_format_error+"<br>"+t.stdout,"error"),!0))}async function openconfigfile(){const e=window.__TAURI__.dialog["open"],i=await e({multiple:!1,filters:[{name:"Opencore config file web editor",extensions:["plist"]}]});var t;"string"==typeof i&&(VUEAPP.tauri_file_choose=VUEAPP.lang.change,await checkPlistfile(i)||(t=i.split("/"),VUEAPP.tauri_file_path=t[t.length-1],VUEAPP.open_file_path=i,$("#span_open_file_path").text(i),readconfigfile(i)))}async function readconfigfile(e){const i=window.__TAURI__.core["invoke"];e=await i("read_file_to_string",{filepath:e});VUEAPP.plistJsonObject=formatContext(e),VUEAPP.initAllData()}async function savePlistTauri(){if(""===VUEAPP.open_file_path)toastr.error(VUEAPP.lang.tip_file_save_failed);else{var e=checkOneditTable();if(""!==e)toastr.error(e);else{e=getAllPlist();const i=window.__TAURI__.core["invoke"];e=await i("save_file",{filepath:VUEAPP.open_file_path,content:e});"Ok"===e?showTipModal(VUEAPP.lang.tip_file_save_success,"success"):showTipModal(e,"error")}}}function upgradeOpencore_MT(){const i=VUEAPP.select_efi_drives.options.find(e=>e.value===VUEAPP.select_efi_drives.selected);i.ismounted?bootbox.confirm("<div style='font-size:18px'>"+fillLangString(VUEAPP.lang.tip_is_continue_upgrading_opencore,i.partitionname,VUEAPP.opencore_latest_version)+"</div>",function(e){e&&asyncupgradeOpencore(`/Volumes/${i.partitionname}/EFI`)}):showTipModal(fillLangString(VUEAPP.lang.tip_EFI_partition_not_exist,i.partitionname),"error")}async function asyncupgradeOpencore(e){$("body").css("cursor","progress");const i=window.__TAURI__.path["tempDir"],t=window.__TAURI__.core["invoke"];var o=await i(),n=`${o}OpenCore-${VUEAPP.opencore_latest_version}-RELEASE`,s=`${o}OpenCore-${VUEAPP.opencore_latest_version}-RELEASE.zip`,a=(showTipModal(VUEAPP.lang.tip_file_download_start),await t("get_file_size",{filepath:s}));if(a<8e6){a=`${VUEAPP.download_proxy_url}/https://github.com/acidanthera/OpenCorePkg/releases/download/${VUEAPP.opencore_latest_version}/OpenCore-${VUEAPP.opencore_latest_version}-RELEASE.zip`;if(0===await t("download_file",{url:a,outputdir:o}))return $("body").css("cursor",""),void showTipModal(VUEAPP.lang.tip_file_download_failed,"error")}showTipModal(VUEAPP.lang.tip_file_download_success);await t("unzip_file_to_dir",{zippath:s,destdir:n});a=await t("list_files_in_dir",{dirpath:e+"/BOOT"});for(const l of JSON.parse(a).files)"Ok"===await t("copy_file_to_dir",{srcfile:n+"/X64/EFI/BOOT/"+l,destdir:e+"/BOOT"})&&showTipModal(fillLangString(VUEAPP.lang.tip_file_upgrade_success,l));o=await t("list_files_in_dir",{dirpath:e+"/OC"});for(const _ of JSON.parse(o).files)"Ok"===await t("copy_file_to_dir",{srcfile:n+"/X64/EFI/OC/"+_,destdir:e+"/OC"})&&showTipModal(fillLangString(VUEAPP.lang.tip_file_upgrade_success,_));$("body").css("cursor",""),showTipModal(VUEAPP.lang.tip_upgrade_opencore_success)}